entered daikon.chicory.Runtime.setDtrace(.\GCD.dtrace.gz, false)...
Daikon version 5.4.0, released October 4, 2016; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
examples.GCD.dummy(examples.SimpleInteger, examples.SimpleInteger, int, int):::ENTER
x != null
x.value >= 1
y != null
y.value >= 1
X >= 1
Y >= 1
x.value <= X
y.value <= Y
===========================================================================
examples.GCD.dummy(examples.SimpleInteger, examples.SimpleInteger, int, int):::EXIT
x.value == orig(x.value)
y.value == orig(y.value)
x.value >= 1
y.value >= 1
x.value <= orig(X)
y.value <= orig(Y)
===========================================================================
examples.GCD.gCD(examples.SimpleInteger, examples.SimpleInteger):::ENTER
x != null
y != null
===========================================================================
examples.GCD.gCD(examples.SimpleInteger, examples.SimpleInteger):::EXIT
x.value == y.value
x.value >= 1
orig(x.value) % x.value == 0
x.value <= orig(x.value)
orig(y.value) % x.value == 0
x.value <= orig(y.value)
===========================================================================
examples.GCD.main(java.lang.String[]):::ENTER
args has only one value
args.getClass().getName() == java.lang.String[].class
args[] == []
args[].toString == []
===========================================================================
examples.GCD.main(java.lang.String[]):::EXIT
args[] == orig(args[])
args[] == []
args[].toString == []
===========================================================================
examples.SimpleInteger:::OBJECT
this.value >= 1
===========================================================================
examples.SimpleInteger.SimpleInteger(int):::ENTER
a >= 1
===========================================================================
examples.SimpleInteger.SimpleInteger(int):::EXIT
this.value == orig(a)
Exiting Daikon.
